@model UserUserSettingsModel

@{
    //page title
    ViewBag.PageTitle = T("Admin.Configuration.Settings.UserUser").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("User settings");
}

@{
    const string hideCommonBlockAttributeName = "UserUserSettingsPage.HideCommonBlock";
    var hideCommonBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentUserAsync(), hideCommonBlockAttributeName);

    const string hideSecurityBlockAttributeName = "UserUserSettingsPage.HideSecurityBlock";
    var hideSecurityBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentUserAsync(), hideSecurityBlockAttributeName);

    const string hideAccountBlockAttributeName = "UserUserSettingsPage.HideAccountBlock";
    var hideAccountBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentUserAsync(), hideAccountBlockAttributeName);

    const string hideProfileBlockAttributeName = "UserUserSettingsPage.HideProfileBlock";
    var hideProfileBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentUserAsync(), hideProfileBlockAttributeName);

    const string hideUserFormFieldsBlockAttributeName = "UserUserSettingsPage.HideUserFormFieldsBlock";
    var hideUserFormFieldsBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentUserAsync(), hideUserFormFieldsBlockAttributeName);

    const string hideAddressFormFieldsBlockAttributeName = "UserUserSettingsPage.HideAddressFormFieldsBlock";
    var hideAddressFormFieldsBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentUserAsync(), hideAddressFormFieldsBlockAttributeName);
}

<form asp-controller="Setting" asp-action="UserUser" method="post">
    <div class="content-header clearfix">
        <h1 class="pull-left">
            @T("Admin.Configuration.Settings.UserUser")
        </h1>
        <div class="pull-right">
            <button type="submit" name="save" class="btn btn-primary">
                <i class="fa fa-floppy-o"></i>
                @T("Admin.Common.Save")
            </button>
            @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.UserUserSettingsButtons })
        </div>
    </div>
    <div asp-validation-summary="All"></div>

    <section class="content">
        <div class="container-fluid">
            <div class="form-horizontal">
                @await Component.InvokeAsync("SettingMode")
                <tvprog-cards id="usersettings-cards">
                    <tvprog-card asp-name="usersettings-common" asp-icon="fa fa-info" asp-title="@T("Admin.Configuration.Settings.UserUser.BlockTitle.Common")" asp-hide-block-attribute-name="@hideCommonBlockAttributeName" asp-hide="@hideCommonBlock" asp-advanced="false">@await Html.PartialAsync("_UserUser.Common", Model)</tvprog-card>
                    <tvprog-card asp-name="usersettings-security" asp-icon="fa fa-shield" asp-title="@T("Admin.Configuration.Settings.UserUser.BlockTitle.Password")" asp-hide-block-attribute-name="@hideSecurityBlockAttributeName" asp-hide="@hideSecurityBlock" asp-advanced="true">@await Html.PartialAsync("_UserUser.Security", Model)</tvprog-card>
                    <tvprog-card asp-name="usersettings-account" asp-icon="fa fa-user" asp-title="@T("Admin.Configuration.Settings.UserUser.BlockTitle.Account")" asp-hide-block-attribute-name="@hideAccountBlockAttributeName" asp-hide="@hideAccountBlock" asp-advanced="true">@await Html.PartialAsync("_UserUser.Account", Model)</tvprog-card>
                    <tvprog-card asp-name="usersettings-profile" asp-icon="fa fa-user-circle-o" asp-title="@T("Admin.Configuration.Settings.UserUser.BlockTitle.Profile")" asp-hide-block-attribute-name="@hideProfileBlockAttributeName" asp-hide="@hideProfileBlock" asp-advanced="true">@await Html.PartialAsync("_UserUser.Profile", Model)</tvprog-card>
                    <tvprog-card asp-name="usersettings-userformfields" asp-icon="fa fa-align-justify" asp-title="@T("Admin.Configuration.Settings.UserUser.UserFormFields")" asp-hide-block-attribute-name="@hideUserFormFieldsBlockAttributeName" asp-hide="@hideUserFormFieldsBlock" asp-advanced="false">@await Html.PartialAsync("_UserUser.UserFormFields", Model)</tvprog-card>
                    <tvprog-card asp-name="usersettings-addressformfields" asp-icon="fa fa-address-book-o" asp-title="@T("Admin.Configuration.Settings.UserUser.AddressFormFields")" asp-hide-block-attribute-name="@hideAddressFormFieldsBlockAttributeName" asp-hide="@hideAddressFormFieldsBlock" asp-advanced="false">@await Html.PartialAsync("_UserUser.AddressFormFields", Model)</tvprog-card>

                    @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.UserUserDetailsBlock, additionalData = Model })
                </tvprog-cards>
            </div>
        </div>
    </section>
    <script>
        $(document).ready(function () {
            $("#@Html.IdFor(model => model.MultiFactorAuthenticationSettings.ForceMultifactorAuthentication)").click(toggleForceMultifactorAuthentication);
            toggleForceMultifactorAuthentication();
        });

        function toggleForceMultifactorAuthentication() {
            warningValidation('@Url.Action("ForceMultifactorAuthenticationWarning", "Setting")',
                '@Html.NameFor(model => model.MultiFactorAuthenticationSettings.ForceMultifactorAuthentication)',
                {
                    forceMultifactorAuthentication: $('#@Html.IdFor(model => model.MultiFactorAuthenticationSettings.ForceMultifactorAuthentication)').is(':checked')
                });
        }
    </script>
</form>
