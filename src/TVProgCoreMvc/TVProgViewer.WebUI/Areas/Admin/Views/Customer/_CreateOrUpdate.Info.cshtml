@model UserModel

@using Newtonsoft.Json
@if (Model.CountryEnabled && Model.StateProvinceEnabled)
{
    <script>
        $(document).ready(function() {
            $("#@Html.IdFor(model => model.CountryId)").change(function() {
                var selectedItem = $(this).val();
                var ddlStates = $("#@Html.IdFor(model => model.StateProvinceId)");

                var postData = {
                    countryId: selectedItem,
                    addSelectStateItem: "true"
                };

                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.Action("GetStatesByCountryId", "Country"))",
                    data: postData,
                    success: function (data, textStatus, jqXHR) {
                        ddlStates.html('');
                        $.each(data, function(id, option) {
                            ddlStates.append($('<option></option>').val(option.id).html(option.name));
                        });
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        $("#statesAlert").click();
                    }
                });
            });
        });
    </script>
}

<div class="panel-body">
    @if (Model.UsernamesEnabled)
    {
        <div class="form-group">
            <div class="col-md-3">
                <tvprog-label asp-for="UserName" />
            </div>
            <div class="col-md-9">
                <tvprog-editor asp-for="UserName" />
                <span asp-validation-for="UserName"></span>
            </div>
        </div>
    }
    <div class="form-group">
        <div class="col-md-3">
            <tvprog-label asp-for="Email" />
        </div>
        <div class="col-md-9">
            <tvprog-editor asp-for="Email" />
            <span asp-validation-for="Email"></span>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-3">
            <tvprog-label asp-for="Password" />
        </div>
        <div class="col-md-9">
            <div class="input-group">
                <tvprog-editor asp-for="Password" />
                <div class="input-group-btn">
                    @if (Model.Id > 0)
                    {
                        <button type="submit" name="changepassword" class="btn btn-info">
                            @T("Admin.Users.Users.Fields.Password.Change")
                        </button>
                    }
                </div>
            </div>
            <span asp-validation-for="Password"></span>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-3">
            <tvprog-label asp-for="FirstName" />
        </div>
        <div class="col-md-9">
            <tvprog-editor asp-for="FirstName" />
            <span asp-validation-for="FirstName"></span>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-3">
            <tvprog-label asp-for="LastName" />
        </div>
        <div class="col-md-9">
            <tvprog-editor asp-for="LastName" />
            <span asp-validation-for="LastName"></span>
        </div>
    </div>
    @if (Model.GenderEnabled)
    {
        <div class="form-group">
            <div class="col-md-3">
                <tvprog-label asp-for="Gender" />
            </div>
            <div class="col-md-9">
                <div class="raw">
                    <div class="col-md-1">
                        <div class="radio">
                            <label>
                                @Html.RadioButton("Gender", "M", (Model.Gender == "M"), new { id = "Gender_Male" })
                                @T("Admin.Users.Users.Fields.Gender.Male")
                            </label>
                        </div>
                    </div>
                    <div class="col-md-11">
                        <div class="radio">
                            <label>
                                @Html.RadioButton("Gender", "F", (Model.Gender == "F"), new { id = "Gender_Female" })
                                @T("Admin.Users.Users.Fields.Gender.Female")
                            </label>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    @if (Model.DateOfBirthEnabled)
    {
        <div class="form-group">
            <div class="col-md-3">
                <tvprog-label asp-for="DateOfBirth" />
            </div>
            <div class="col-md-9">
                <tvprog-editor asp-for="DateOfBirth" />
                <span asp-validation-for="DateOfBirth"></span>
            </div>
        </div>
    }
    @if (Model.CompanyEnabled)
    {
        <div class="form-group">
            <div class="col-md-3">
                <tvprog-label asp-for="Company" />
            </div>
            <div class="col-md-9">
                <tvprog-editor asp-for="Company" />
                <span asp-validation-for="Company"></span>
            </div>
        </div>
    }
    @if (Model.StreetAddressEnabled)
    {
        <div class="form-group">
            <div class="col-md-3">
                <tvprog-label asp-for="StreetAddress" />
            </div>
            <div class="col-md-9">
                <tvprog-editor asp-for="StreetAddress" />
                <span asp-validation-for="StreetAddress"></span>
            </div>
        </div>
    }
    @if (Model.StreetAddress2Enabled)
    {
        <div class="form-group">
            <div class="col-md-3">
                <tvprog-label asp-for="StreetAddress2" />
            </div>
            <div class="col-md-9">
                <tvprog-editor asp-for="StreetAddress2" />
                <span asp-validation-for="StreetAddress2"></span>
            </div>
        </div>
    }
    @if (Model.ZipPostalCodeEnabled)
    {
        <div class="form-group">
            <div class="col-md-3">
                <tvprog-label asp-for="ZipPostalCode" />
            </div>
            <div class="col-md-9">
                <tvprog-editor asp-for="ZipPostalCode" />
                <span asp-validation-for="ZipPostalCode"></span>
            </div>
        </div>
    }
    @if (Model.CityEnabled)
    {
        <div class="form-group">
            <div class="col-md-3">
                <tvprog-label asp-for="City" />
            </div>
            <div class="col-md-9">
                <tvprog-editor asp-for="City" />
                <span asp-validation-for="City"></span>
            </div>
        </div>
    }
    @if (Model.CountyEnabled)
    {
        <div class="form-group">
            <div class="col-md-3">
                <tvprog-label asp-for="County" />
            </div>
            <div class="col-md-9">
                <tvprog-editor asp-for="County" />
                <span asp-validation-for="County"></span>
            </div>
        </div>
    }
    @if (Model.CountryEnabled)
    {
        <div class="form-group">
            <div class="col-md-3">
                <tvprog-label asp-for="CountryId" />
            </div>
            <div class="col-md-9">
                <tvprog-select asp-for="CountryId" asp-items="Model.AvailableCountries" />
                <span asp-validation-for="CountryId"></span>
            </div>
        </div>
    }
    @if (Model.CountryEnabled && Model.StateProvinceEnabled)
    {
        <div class="form-group">
            <div class="col-md-3">
                <tvprog-label asp-for="StateProvinceId" />
            </div>
            <div class="col-md-9">
                <tvprog-select asp-for="StateProvinceId" asp-items="Model.AvailableStates" />
                <span asp-validation-for="StateProvinceId"></span>
            </div>
        </div>
    }
    @if (Model.PhoneEnabled)
    {
        <div class="form-group">
            <div class="col-md-3">
                <tvprog-label asp-for="Phone" />
            </div>
            <div class="col-md-9">
                <tvprog-editor asp-for="Phone" />
                <span asp-validation-for="Phone"></span>
            </div>
        </div>
    }
    @if (Model.FaxEnabled)
    {
        <div class="form-group">
            <div class="col-md-3">
                <tvprog-label asp-for="Fax" />
            </div>
            <div class="col-md-9">
                <tvprog-editor asp-for="Fax" />
                <span asp-validation-for="Fax"></span>
            </div>
        </div>
    }
    @if (Model.UserAttributes.Count > 0)
    {
        @await Html.PartialAsync("_UserAttributes", Model.UserAttributes)
    }
    <div class="form-group">
        <div class="col-md-3">
            <tvprog-label asp-for="IsTaxExempt" />
        </div>
        <div class="col-md-9">
            <tvprog-editor asp-for="IsTaxExempt" />
            <span asp-validation-for="IsTaxExempt"></span>
        </div>
    </div>
    @if (Model.DisplayVatNumber)
    {
        <div class="form-group">
            <div class="col-md-3">
                <tvprog-label asp-for="VatNumber" />
            </div>
            <div class="col-md-9">
                <tvprog-editor asp-for="VatNumber" />
                <div class="margin-t-5">
                    (@string.Format(T("Admin.Users.Users.Fields.VatNumberStatus").Text, Model.VatNumberStatusNote))
                    <button type="submit" name="markVatNumberAsValid" class="btn btn-primary">
                        @T("Admin.Users.Users.Fields.VatNumber.MarkAsValid")
                    </button>
                    <button type="submit" name="markVatNumberAsInvalid" class="btn bg-red">
                        @T("Admin.Users.Users.Fields.VatNumber.MarkAsInvalid")
                    </button>
                </div>
                <span asp-validation-for="VatNumber"></span>
            </div>
        </div>
    }
    @if (Model.AllowUsersToSetTimeZone)
    {
        <div class="form-group">
            <div class="col-md-3">
                <tvprog-label asp-for="TimeZoneId" />
            </div>
            <div class="col-md-9">
                <tvprog-select asp-for="TimeZoneId" asp-items="Model.AvailableTimeZones" />
                <span asp-validation-for="TimeZoneId"></span>
            </div>
        </div>
    }
    @if (Model.AvailableNewsletterSubscriptionStores != null && Model.AvailableNewsletterSubscriptionStores.Count > 0)
    {
        <div class="form-group">
            <div class="col-md-3">
                <tvprog-label asp-for="SelectedNewsletterSubscriptionStoreIds" />
            </div>
            <div class="col-md-9">
                <div class="input-group input-group-required">
                    <tvprog-select asp-for="SelectedNewsletterSubscriptionStoreIds" asp-items="Model.AvailableNewsletterSubscriptionStores" asp-multiple="true" />
                    <div class="input-group-btn"></div>
                </div>
                <script>
                $(document).ready(function() {
                    var newsletterSubscriptionStoreIdsInput = $('#@Html.IdFor(model => model.SelectedNewsletterSubscriptionStoreIds)').data("kendoMultiSelect");
                    newsletterSubscriptionStoreIdsInput.setOptions({
                        newsletterSubscriptionStoreIdsInput: false,
                        filter: "contains"
                    });
                });
                </script>
            </div>
        </div>
    }
    <div class="form-group">
        <div class="col-md-3">
            <tvprog-label asp-for="SelecteduserRoleIds" />
        </div>
        <div class="col-md-9">
            <div class="input-group input-group-required">
                <tvprog-select asp-for="SelecteduserRoleIds" asp-items="Model.AvailableUserRoles" asp-multiple="true" />
                <div class="input-group-btn">
                    <tvprog-required />
                </div>
            </div>
            <script>
                $(document).ready(function() {
                    var userRolesIdsInput = $('#@Html.IdFor(model => model.SelecteduserRoleIds)').data("kendoMultiSelect");
                    userRolesIdsInput.setOptions({
                        userRolesIdsInput: false,
                        filter: "contains"
                    });

                    @if (Model.AvailableUserRoles.Count == 0)
                    {
                        <text>
                            userRolesIdsInput.setOptions({
                                enable: false,
                                placeholder: '@T("Admin.Users.Users.Fields.UserRoles.NoRoles")'
                            });
                            userRolesIdsInput._placeholder();
                            userRolesIdsInput._enable();
                        </text>
                    }
                });
            </script>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-3">
            <tvprog-label asp-for="VendorId" />
        </div>
        <div class="col-md-9">
            <tvprog-select asp-for="VendorId" asp-items="Model.AvailableVendors" />
            <span asp-validation-for="VendorId"></span>
            <em>@T("Admin.Users.Users.VendorShouldBeInVendorsRole")</em>
        </div>
    </div>
    @if (Model.AffiliateId > 0)
    {
        <div class="form-group">
            <div class="col-md-3">
                <tvprog-label asp-for="AffiliateId" />
            </div>
            <div class="col-md-9">
                <a asp-controller="Affiliate" asp-action="Edit" asp-route-id="@Model.AffiliateId">@Model.AffiliateName - @T("Admin.Common.View")</a>
                <button type="submit" name="remove-affiliate" class="btn bg-red">
                    @T("Admin.Users.Users.Fields.Affiliate.Remove")
                </button>
            </div>
        </div>
    }
    <div class="form-group">
        <div class="col-md-3">
            <tvprog-label asp-for="Active" />
        </div>
        <div class="col-md-9">
            <tvprog-editor asp-for="Active" />
            <span asp-validation-for="Active"></span>
        </div>
    </div>

    @if (Model.Id > 0 && Model.UserAssociatedExternalAuthRecordsSearchModel.AssociatedExternalAuthRecords.Count > 0)
    {
        <div class="form-group">
            <div class="col-md-3">
                <tvprog-label asp-for="UserAssociatedExternalAuthRecordsSearchModel.AssociatedExternalAuthRecords" />
            </div>
            <div class="col-md-9">
                @await Html.PartialAsync("Table", new DataTablesModel
                {
                    Name = "externalauthrecords-grid",
                    Paging = false,
                    ServerSide = false,
                    Length = Model.UserAssociatedExternalAuthRecordsSearchModel.PageSize,
                    LengthMenu = Model.UserAssociatedExternalAuthRecordsSearchModel.AvailablePageSizes,
                    ColumnCollection = new List<ColumnProperty>
                    {
                        new ColumnProperty(nameof(UserAssociatedExternalAuthModel.AuthMethodName))
                        {
                            Title = T("Admin.Users.Users.AssociatedExternalAuth.Fields.AuthMethodName").Text,
                            Width = "100"
                        },
                        new ColumnProperty(nameof(UserAssociatedExternalAuthModel.Email))
                        {
                            Title = T("Admin.Users.Users.AssociatedExternalAuth.Fields.Email").Text,
                            Width = "100"
                        },
                        new ColumnProperty(nameof(UserAssociatedExternalAuthModel.ExternalIdentifier))
                        {
                            Title = T("Admin.Users.Users.AssociatedExternalAuth.Fields.ExternalIdentifier").Text,
                            Width = "300"
                        }
                    },
                    Data = JsonConvert.SerializeObject(Model.UserAssociatedExternalAuthRecordsSearchModel.AssociatedExternalAuthRecords.Select(externalAuthRecord => new
                    {
                        AuthMethodName = JavaScriptEncoder.Default.Encode(externalAuthRecord.AuthMethodName),
                        Email = JavaScriptEncoder.Default.Encode(externalAuthRecord.Email),
                        ExternalIdentifier = JavaScriptEncoder.Default.Encode(externalAuthRecord.ExternalIdentifier)
                    }).ToList())
                })
            </div>
        </div>
    }
    <div class="form-group">
        <div class="col-md-3">
            <tvprog-label asp-for="AdminComment" />
        </div>
        <div class="col-md-9">
            <tvprog-textarea asp-for="AdminComment" />
            <span asp-validation-for="AdminComment"></span>
        </div>
    </div>
    @if (Model.DisplayRegisteredInStore)
    {
        <div class="form-group">
            <div class="col-md-3">
                <tvprog-label asp-for="RegisteredInStore" />
            </div>
            <div class="col-md-9">
                <div class="form-text-row">@Model.RegisteredInStore</div>
            </div>
        </div>
    }
    @if (Model.Id > 0)
    {
        <div class="form-group">
            <div class="col-md-3">
                <tvprog-label asp-for="LastIpAddress" />
            </div>
            <div class="col-md-9">
                <div class="form-text-row">@Model.LastIpAddress</div>
            </div>
        </div>
    }
    @if (Model.Id > 0)
    {
        <div class="form-group">
            <div class="col-md-3">
                <tvprog-label asp-for="CreatedOn" />
            </div>
            <div class="col-md-9">
                <div class="form-text-row">@Model.CreatedOn</div>
            </div>
        </div>
    }
    @if (Model.Id > 0)
    {
        <div class="form-group">
            <div class="col-md-3">
                <tvprog-label asp-for="LastActivityDate" />
            </div>
            <div class="col-md-9">
                <div class="form-text-row">@Model.LastActivityDate</div>
            </div>
        </div>
    }
    @if (Model.Id > 0 && !string.IsNullOrEmpty(Model.LastVisitedPage))
    {
        <div class="form-group">
            <div class="col-md-3">
                <tvprog-label asp-for="LastVisitedPage" />
            </div>
            <div class="col-md-9">
                <div class="form-text-row">@Model.LastVisitedPage</div>
            </div>
        </div>
    }
</div>

<tvprog-alert asp-alert-id="statesAlert" asp-alert-message="@T("Admin.Common.Alert.States.Failed")" />