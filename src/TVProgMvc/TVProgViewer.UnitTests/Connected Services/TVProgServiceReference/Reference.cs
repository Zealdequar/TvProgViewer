//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TVProgViewer.UnitTests.TVProgServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecureData", Namespace="http://schemas.datacontract.org/2004/07/TVProgViewer.BusinessLogic.Users")]
    [System.SerializableAttribute()]
    public partial class SecureData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassExtendField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassHashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassExtend {
            get {
                return this.PassExtendField;
            }
            set {
                if ((object.ReferenceEquals(this.PassExtendField, value) != true)) {
                    this.PassExtendField = value;
                    this.RaisePropertyChanged("PassExtend");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassHash {
            get {
                return this.PassHashField;
            }
            set {
                if ((object.ReferenceEquals(this.PassHashField, value) != true)) {
                    this.PassHashField = value;
                    this.RaisePropertyChanged("PassHash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UID {
            get {
                return this.UIDField;
            }
            set {
                if ((this.UIDField.Equals(value) != true)) {
                    this.UIDField = value;
                    this.RaisePropertyChanged("UID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/TVProgViewer.BusinessLogic.Users")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GmtZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobilePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherPhone1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherPhone2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Catalog {
            get {
                return this.CatalogField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogField, value) != true)) {
                    this.CatalogField = value;
                    this.RaisePropertyChanged("Catalog");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GmtZone {
            get {
                return this.GmtZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.GmtZoneField, value) != true)) {
                    this.GmtZoneField = value;
                    this.RaisePropertyChanged("GmtZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobilePhone {
            get {
                return this.MobilePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.MobilePhoneField, value) != true)) {
                    this.MobilePhoneField = value;
                    this.RaisePropertyChanged("MobilePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OtherPhone1 {
            get {
                return this.OtherPhone1Field;
            }
            set {
                if ((object.ReferenceEquals(this.OtherPhone1Field, value) != true)) {
                    this.OtherPhone1Field = value;
                    this.RaisePropertyChanged("OtherPhone1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OtherPhone2 {
            get {
                return this.OtherPhone2Field;
            }
            set {
                if ((object.ReferenceEquals(this.OtherPhone2Field, value) != true)) {
                    this.OtherPhone2Field = value;
                    this.RaisePropertyChanged("OtherPhone2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProviderType", Namespace="http://schemas.datacontract.org/2004/07/TVProgViewer.BusinessLogic.ProgObjs")]
    [System.SerializableAttribute()]
    public partial class ProviderType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProviderNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri ProviderUriField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TVProgProviderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TVProgViewer.UnitTests.TVProgServiceReference.EnumsTypeProg TypeEnumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeProgIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileFormat {
            get {
                return this.FileFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.FileFormatField, value) != true)) {
                    this.FileFormatField = value;
                    this.RaisePropertyChanged("FileFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProviderName {
            get {
                return this.ProviderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderNameField, value) != true)) {
                    this.ProviderNameField = value;
                    this.RaisePropertyChanged("ProviderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri ProviderUri {
            get {
                return this.ProviderUriField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderUriField, value) != true)) {
                    this.ProviderUriField = value;
                    this.RaisePropertyChanged("ProviderUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TVProgProviderID {
            get {
                return this.TVProgProviderIDField;
            }
            set {
                if ((this.TVProgProviderIDField.Equals(value) != true)) {
                    this.TVProgProviderIDField = value;
                    this.RaisePropertyChanged("TVProgProviderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TVProgViewer.UnitTests.TVProgServiceReference.EnumsTypeProg TypeEnum {
            get {
                return this.TypeEnumField;
            }
            set {
                if ((this.TypeEnumField.Equals(value) != true)) {
                    this.TypeEnumField = value;
                    this.RaisePropertyChanged("TypeEnum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeName {
            get {
                return this.TypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeNameField, value) != true)) {
                    this.TypeNameField = value;
                    this.RaisePropertyChanged("TypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeProgID {
            get {
                return this.TypeProgIDField;
            }
            set {
                if ((this.TypeProgIDField.Equals(value) != true)) {
                    this.TypeProgIDField = value;
                    this.RaisePropertyChanged("TypeProgID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Enums.TypeProg", Namespace="http://schemas.datacontract.org/2004/07/TVProgViewer.Common")]
    public enum EnumsTypeProg : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XMLTV = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InterTV = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SystemChannel", Namespace="http://schemas.datacontract.org/2004/07/TVProgViewer.BusinessLogic.ProgObjs")]
    [System.SerializableAttribute()]
    public partial class SystemChannel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChannelIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileName25Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameOrigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> IconIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageWebSrcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> InternalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderColField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TVProgViewerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserChannelIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VisibleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChannelID {
            get {
                return this.ChannelIDField;
            }
            set {
                if ((this.ChannelIDField.Equals(value) != true)) {
                    this.ChannelIDField = value;
                    this.RaisePropertyChanged("ChannelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Diff {
            get {
                return this.DiffField;
            }
            set {
                if ((object.ReferenceEquals(this.DiffField, value) != true)) {
                    this.DiffField = value;
                    this.RaisePropertyChanged("Diff");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName25 {
            get {
                return this.FileName25Field;
            }
            set {
                if ((object.ReferenceEquals(this.FileName25Field, value) != true)) {
                    this.FileName25Field = value;
                    this.RaisePropertyChanged("FileName25");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileNameOrig {
            get {
                return this.FileNameOrigField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameOrigField, value) != true)) {
                    this.FileNameOrigField = value;
                    this.RaisePropertyChanged("FileNameOrig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> IconID {
            get {
                return this.IconIDField;
            }
            set {
                if ((this.IconIDField.Equals(value) != true)) {
                    this.IconIDField = value;
                    this.RaisePropertyChanged("IconID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageWebSrc {
            get {
                return this.ImageWebSrcField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageWebSrcField, value) != true)) {
                    this.ImageWebSrcField = value;
                    this.RaisePropertyChanged("ImageWebSrc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> InternalID {
            get {
                return this.InternalIDField;
            }
            set {
                if ((this.InternalIDField.Equals(value) != true)) {
                    this.InternalIDField = value;
                    this.RaisePropertyChanged("InternalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderCol {
            get {
                return this.OrderColField;
            }
            set {
                if ((this.OrderColField.Equals(value) != true)) {
                    this.OrderColField = value;
                    this.RaisePropertyChanged("OrderCol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemTitle {
            get {
                return this.SystemTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemTitleField, value) != true)) {
                    this.SystemTitleField = value;
                    this.RaisePropertyChanged("SystemTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TVProgViewerID {
            get {
                return this.TVProgViewerIDField;
            }
            set {
                if ((this.TVProgViewerIDField.Equals(value) != true)) {
                    this.TVProgViewerIDField = value;
                    this.RaisePropertyChanged("TVProgViewerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserChannelID {
            get {
                return this.UserChannelIDField;
            }
            set {
                if ((this.UserChannelIDField.Equals(value) != true)) {
                    this.UserChannelIDField = value;
                    this.RaisePropertyChanged("UserChannelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserTitle {
            get {
                return this.UserTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTitleField, value) != true)) {
                    this.UserTitleField = value;
                    this.RaisePropertyChanged("UserTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Visible {
            get {
                return this.VisibleField;
            }
            set {
                if ((this.VisibleField.Equals(value) != true)) {
                    this.VisibleField = value;
                    this.RaisePropertyChanged("Visible");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserChannel", Namespace="http://schemas.datacontract.org/2004/07/TVProgViewer.BusinessLogic.ProgObjs")]
    [System.SerializableAttribute()]
    public partial class UserChannel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChannelIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileName25Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameOrigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> IconIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageWebSrcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> InternalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderColField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TVProgViewerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserChannelIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChannelID {
            get {
                return this.ChannelIDField;
            }
            set {
                if ((this.ChannelIDField.Equals(value) != true)) {
                    this.ChannelIDField = value;
                    this.RaisePropertyChanged("ChannelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName25 {
            get {
                return this.FileName25Field;
            }
            set {
                if ((object.ReferenceEquals(this.FileName25Field, value) != true)) {
                    this.FileName25Field = value;
                    this.RaisePropertyChanged("FileName25");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileNameOrig {
            get {
                return this.FileNameOrigField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameOrigField, value) != true)) {
                    this.FileNameOrigField = value;
                    this.RaisePropertyChanged("FileNameOrig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> IconID {
            get {
                return this.IconIDField;
            }
            set {
                if ((this.IconIDField.Equals(value) != true)) {
                    this.IconIDField = value;
                    this.RaisePropertyChanged("IconID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageWebSrc {
            get {
                return this.ImageWebSrcField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageWebSrcField, value) != true)) {
                    this.ImageWebSrcField = value;
                    this.RaisePropertyChanged("ImageWebSrc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> InternalID {
            get {
                return this.InternalIDField;
            }
            set {
                if ((this.InternalIDField.Equals(value) != true)) {
                    this.InternalIDField = value;
                    this.RaisePropertyChanged("InternalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderCol {
            get {
                return this.OrderColField;
            }
            set {
                if ((this.OrderColField.Equals(value) != true)) {
                    this.OrderColField = value;
                    this.RaisePropertyChanged("OrderCol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TVProgViewerID {
            get {
                return this.TVProgViewerIDField;
            }
            set {
                if ((this.TVProgViewerIDField.Equals(value) != true)) {
                    this.TVProgViewerIDField = value;
                    this.RaisePropertyChanged("TVProgViewerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserChannelID {
            get {
                return this.UserChannelIDField;
            }
            set {
                if ((this.UserChannelIDField.Equals(value) != true)) {
                    this.UserChannelIDField = value;
                    this.RaisePropertyChanged("UserChannelID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SystemProgramme", Namespace="http://schemas.datacontract.org/2004/07/TVProgViewer.BusinessLogic.ProgObjs")]
    [System.SerializableAttribute()]
    public partial class SystemProgramme : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnonsContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChannelContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChannelNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChannelNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DayMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenreContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenreNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenrePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> InternalChanIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderColField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProgrammeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProgrammesIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RemainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset StartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset StopField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelecastCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelecastDescrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelecastTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset TsStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TsStartMOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TsStopMOField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AnonsContent {
            get {
                return this.AnonsContentField;
            }
            set {
                if ((object.ReferenceEquals(this.AnonsContentField, value) != true)) {
                    this.AnonsContentField = value;
                    this.RaisePropertyChanged("AnonsContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CID {
            get {
                return this.CIDField;
            }
            set {
                if ((this.CIDField.Equals(value) != true)) {
                    this.CIDField = value;
                    this.RaisePropertyChanged("CID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChannelContent {
            get {
                return this.ChannelContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelContentField, value) != true)) {
                    this.ChannelContentField = value;
                    this.RaisePropertyChanged("ChannelContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChannelName {
            get {
                return this.ChannelNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelNameField, value) != true)) {
                    this.ChannelNameField = value;
                    this.RaisePropertyChanged("ChannelName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChannelNumber {
            get {
                return this.ChannelNumberField;
            }
            set {
                if ((this.ChannelNumberField.Equals(value) != true)) {
                    this.ChannelNumberField = value;
                    this.RaisePropertyChanged("ChannelNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DayMonth {
            get {
                return this.DayMonthField;
            }
            set {
                if ((object.ReferenceEquals(this.DayMonthField, value) != true)) {
                    this.DayMonthField = value;
                    this.RaisePropertyChanged("DayMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GenreContent {
            get {
                return this.GenreContentField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreContentField, value) != true)) {
                    this.GenreContentField = value;
                    this.RaisePropertyChanged("GenreContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GenreName {
            get {
                return this.GenreNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreNameField, value) != true)) {
                    this.GenreNameField = value;
                    this.RaisePropertyChanged("GenreName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GenrePath {
            get {
                return this.GenrePathField;
            }
            set {
                if ((object.ReferenceEquals(this.GenrePathField, value) != true)) {
                    this.GenrePathField = value;
                    this.RaisePropertyChanged("GenrePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> InternalChanID {
            get {
                return this.InternalChanIDField;
            }
            set {
                if ((this.InternalChanIDField.Equals(value) != true)) {
                    this.InternalChanIDField = value;
                    this.RaisePropertyChanged("InternalChanID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrderCol {
            get {
                return this.OrderColField;
            }
            set {
                if ((this.OrderColField.Equals(value) != true)) {
                    this.OrderColField = value;
                    this.RaisePropertyChanged("OrderCol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProgrammeID {
            get {
                return this.ProgrammeIDField;
            }
            set {
                if ((this.ProgrammeIDField.Equals(value) != true)) {
                    this.ProgrammeIDField = value;
                    this.RaisePropertyChanged("ProgrammeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProgrammesID {
            get {
                return this.ProgrammesIDField;
            }
            set {
                if ((this.ProgrammesIDField.Equals(value) != true)) {
                    this.ProgrammesIDField = value;
                    this.RaisePropertyChanged("ProgrammesID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Remain {
            get {
                return this.RemainField;
            }
            set {
                if ((this.RemainField.Equals(value) != true)) {
                    this.RemainField = value;
                    this.RaisePropertyChanged("Remain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset Start {
            get {
                return this.StartField;
            }
            set {
                if ((this.StartField.Equals(value) != true)) {
                    this.StartField = value;
                    this.RaisePropertyChanged("Start");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset Stop {
            get {
                return this.StopField;
            }
            set {
                if ((this.StopField.Equals(value) != true)) {
                    this.StopField = value;
                    this.RaisePropertyChanged("Stop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TelecastCategory {
            get {
                return this.TelecastCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.TelecastCategoryField, value) != true)) {
                    this.TelecastCategoryField = value;
                    this.RaisePropertyChanged("TelecastCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TelecastDescr {
            get {
                return this.TelecastDescrField;
            }
            set {
                if ((object.ReferenceEquals(this.TelecastDescrField, value) != true)) {
                    this.TelecastDescrField = value;
                    this.RaisePropertyChanged("TelecastDescr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TelecastTitle {
            get {
                return this.TelecastTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TelecastTitleField, value) != true)) {
                    this.TelecastTitleField = value;
                    this.RaisePropertyChanged("TelecastTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset TsStart {
            get {
                return this.TsStartField;
            }
            set {
                if ((this.TsStartField.Equals(value) != true)) {
                    this.TsStartField = value;
                    this.RaisePropertyChanged("TsStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TsStartMO {
            get {
                return this.TsStartMOField;
            }
            set {
                if ((this.TsStartMOField.Equals(value) != true)) {
                    this.TsStartMOField = value;
                    this.RaisePropertyChanged("TsStartMO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TsStopMO {
            get {
                return this.TsStopMOField;
            }
            set {
                if ((this.TsStopMOField.Equals(value) != true)) {
                    this.TsStopMOField = value;
                    this.RaisePropertyChanged("TsStopMO");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProgPeriod", Namespace="http://schemas.datacontract.org/2004/07/TVProgViewer.BusinessLogic.ProgObjs")]
    [System.SerializableAttribute()]
    public partial struct ProgPeriod : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset dtEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset dtStartField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset dtEnd {
            get {
                return this.dtEndField;
            }
            set {
                if ((this.dtEndField.Equals(value) != true)) {
                    this.dtEndField = value;
                    this.RaisePropertyChanged("dtEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset dtStart {
            get {
                return this.dtStartField;
            }
            set {
                if ((this.dtStartField.Equals(value) != true)) {
                    this.dtStartField = value;
                    this.RaisePropertyChanged("dtStart");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Genre", Namespace="http://schemas.datacontract.org/2004/07/TVProgViewer.BusinessLogic.ProgObjs")]
    [System.SerializableAttribute()]
    public partial class Genre : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset DeleteDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GenreIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenreNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenrePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IconIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VisibleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset DeleteDate {
            get {
                return this.DeleteDateField;
            }
            set {
                if ((this.DeleteDateField.Equals(value) != true)) {
                    this.DeleteDateField = value;
                    this.RaisePropertyChanged("DeleteDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GenreID {
            get {
                return this.GenreIDField;
            }
            set {
                if ((this.GenreIDField.Equals(value) != true)) {
                    this.GenreIDField = value;
                    this.RaisePropertyChanged("GenreID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GenreName {
            get {
                return this.GenreNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreNameField, value) != true)) {
                    this.GenreNameField = value;
                    this.RaisePropertyChanged("GenreName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GenrePath {
            get {
                return this.GenrePathField;
            }
            set {
                if ((object.ReferenceEquals(this.GenrePathField, value) != true)) {
                    this.GenrePathField = value;
                    this.RaisePropertyChanged("GenrePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IconID {
            get {
                return this.IconIDField;
            }
            set {
                if ((this.IconIDField.Equals(value) != true)) {
                    this.IconIDField = value;
                    this.RaisePropertyChanged("IconID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UID {
            get {
                return this.UIDField;
            }
            set {
                if ((this.UIDField.Equals(value) != true)) {
                    this.UIDField = value;
                    this.RaisePropertyChanged("UID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Visible {
            get {
                return this.VisibleField;
            }
            set {
                if ((this.VisibleField.Equals(value) != true)) {
                    this.VisibleField = value;
                    this.RaisePropertyChanged("Visible");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TVProgServiceReference.IMainService")]
    public interface IMainService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/AddUser", ReplyAction="http://tempuri.org/IMainService/AddUserResponse")]
        int AddUser(string userName, string passHash, string passExtend, string lastName, string firstName, string middleName, System.DateTime birthDate, System.Nullable<bool> gender, string email, string mobPhone, string otherPhone1, string otherPhone2, string address, string gmtZone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/AddUser", ReplyAction="http://tempuri.org/IMainService/AddUserResponse")]
        System.Threading.Tasks.Task<int> AddUserAsync(string userName, string passHash, string passExtend, string lastName, string firstName, string middleName, System.DateTime birthDate, System.Nullable<bool> gender, string email, string mobPhone, string otherPhone1, string otherPhone2, string address, string gmtZone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetHashes", ReplyAction="http://tempuri.org/IMainService/GetHashesResponse")]
        TVProgViewer.UnitTests.TVProgServiceReference.SecureData GetHashes(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetHashes", ReplyAction="http://tempuri.org/IMainService/GetHashesResponse")]
        System.Threading.Tasks.Task<TVProgViewer.UnitTests.TVProgServiceReference.SecureData> GetHashesAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetUser", ReplyAction="http://tempuri.org/IMainService/GetUserResponse")]
        TVProgViewer.UnitTests.TVProgServiceReference.GetUserResponse GetUser(TVProgViewer.UnitTests.TVProgServiceReference.GetUserRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetUser", ReplyAction="http://tempuri.org/IMainService/GetUserResponse")]
        System.Threading.Tasks.Task<TVProgViewer.UnitTests.TVProgServiceReference.GetUserResponse> GetUserAsync(TVProgViewer.UnitTests.TVProgServiceReference.GetUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetProviderTypeList", ReplyAction="http://tempuri.org/IMainService/GetProviderTypeListResponse")]
        TVProgViewer.UnitTests.TVProgServiceReference.ProviderType[] GetProviderTypeList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetProviderTypeList", ReplyAction="http://tempuri.org/IMainService/GetProviderTypeListResponse")]
        System.Threading.Tasks.Task<TVProgViewer.UnitTests.TVProgServiceReference.ProviderType[]> GetProviderTypeListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetSystemChannelList", ReplyAction="http://tempuri.org/IMainService/GetSystemChannelListResponse")]
        TVProgViewer.UnitTests.TVProgServiceReference.SystemChannel[] GetSystemChannelList(int TVProgProviderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetSystemChannelList", ReplyAction="http://tempuri.org/IMainService/GetSystemChannelListResponse")]
        System.Threading.Tasks.Task<TVProgViewer.UnitTests.TVProgServiceReference.SystemChannel[]> GetSystemChannelListAsync(int TVProgProviderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetUserChannelList", ReplyAction="http://tempuri.org/IMainService/GetUserChannelListResponse")]
        TVProgViewer.UnitTests.TVProgServiceReference.UserChannel[] GetUserChannelList(long uid, int typeProgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetUserChannelList", ReplyAction="http://tempuri.org/IMainService/GetUserChannelListResponse")]
        System.Threading.Tasks.Task<TVProgViewer.UnitTests.TVProgServiceReference.UserChannel[]> GetUserChannelListAsync(long uid, int typeProgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetUserInSystemChannels", ReplyAction="http://tempuri.org/IMainService/GetUserInSystemChannelsResponse")]
        TVProgViewer.UnitTests.TVProgServiceReference.SystemChannel[] GetUserInSystemChannels(long uid, int progProviderID, int typeProgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetUserInSystemChannels", ReplyAction="http://tempuri.org/IMainService/GetUserInSystemChannelsResponse")]
        System.Threading.Tasks.Task<TVProgViewer.UnitTests.TVProgServiceReference.SystemChannel[]> GetUserInSystemChannelsAsync(long uid, int progProviderID, int typeProgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetSystemProgrammeList", ReplyAction="http://tempuri.org/IMainService/GetSystemProgrammeListResponse")]
        TVProgViewer.UnitTests.TVProgServiceReference.SystemProgramme[] GetSystemProgrammeList(int typeProgID, System.DateTimeOffset dateTimeOffset, int mode, string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetSystemProgrammeList", ReplyAction="http://tempuri.org/IMainService/GetSystemProgrammeListResponse")]
        System.Threading.Tasks.Task<TVProgViewer.UnitTests.TVProgServiceReference.SystemProgramme[]> GetSystemProgrammeListAsync(int typeProgID, System.DateTimeOffset dateTimeOffset, int mode, string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetSystemProgrammePeriod", ReplyAction="http://tempuri.org/IMainService/GetSystemProgrammePeriodResponse")]
        TVProgViewer.UnitTests.TVProgServiceReference.ProgPeriod GetSystemProgrammePeriod(int typeProgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetSystemProgrammePeriod", ReplyAction="http://tempuri.org/IMainService/GetSystemProgrammePeriodResponse")]
        System.Threading.Tasks.Task<TVProgViewer.UnitTests.TVProgServiceReference.ProgPeriod> GetSystemProgrammePeriodAsync(int typeProgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetSystemProgrammeDayList", ReplyAction="http://tempuri.org/IMainService/GetSystemProgrammeDayListResponse")]
        TVProgViewer.UnitTests.TVProgServiceReference.SystemProgramme[] GetSystemProgrammeDayList(int typeProgID, int cid, System.DateTime tsStart, System.DateTime tsStop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetSystemProgrammeDayList", ReplyAction="http://tempuri.org/IMainService/GetSystemProgrammeDayListResponse")]
        System.Threading.Tasks.Task<TVProgViewer.UnitTests.TVProgServiceReference.SystemProgramme[]> GetSystemProgrammeDayListAsync(int typeProgID, int cid, System.DateTime tsStart, System.DateTime tsStop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/InsertUserChannel", ReplyAction="http://tempuri.org/IMainService/InsertUserChannelResponse")]
        void InsertUserChannel(int userChannelID, long uid, int tvProgProviderID, int cid, string displayName, int orderCol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/InsertUserChannel", ReplyAction="http://tempuri.org/IMainService/InsertUserChannelResponse")]
        System.Threading.Tasks.Task InsertUserChannelAsync(int userChannelID, long uid, int tvProgProviderID, int cid, string displayName, int orderCol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/DeleteUserChannel", ReplyAction="http://tempuri.org/IMainService/DeleteUserChannelResponse")]
        void DeleteUserChannel(long uid, int cid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/DeleteUserChannel", ReplyAction="http://tempuri.org/IMainService/DeleteUserChannelResponse")]
        System.Threading.Tasks.Task DeleteUserChannelAsync(long uid, int cid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetUserProgrammeList", ReplyAction="http://tempuri.org/IMainService/GetUserProgrammeListResponse")]
        TVProgViewer.UnitTests.TVProgServiceReference.SystemProgramme[] GetUserProgrammeList(long uid, int typeProgID, System.DateTimeOffset dateTimeOffset, int mode, string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetUserProgrammeList", ReplyAction="http://tempuri.org/IMainService/GetUserProgrammeListResponse")]
        System.Threading.Tasks.Task<TVProgViewer.UnitTests.TVProgServiceReference.SystemProgramme[]> GetUserProgrammeListAsync(long uid, int typeProgID, System.DateTimeOffset dateTimeOffset, int mode, string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetUserProgrammeDayList", ReplyAction="http://tempuri.org/IMainService/GetUserProgrammeDayListResponse")]
        TVProgViewer.UnitTests.TVProgServiceReference.SystemProgramme[] GetUserProgrammeDayList(long uid, int typeProgID, int cid, System.DateTime tsStart, System.DateTime tsStop, string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetUserProgrammeDayList", ReplyAction="http://tempuri.org/IMainService/GetUserProgrammeDayListResponse")]
        System.Threading.Tasks.Task<TVProgViewer.UnitTests.TVProgServiceReference.SystemProgramme[]> GetUserProgrammeDayListAsync(long uid, int typeProgID, int cid, System.DateTime tsStart, System.DateTime tsStop, string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetCategories", ReplyAction="http://tempuri.org/IMainService/GetCategoriesResponse")]
        string[] GetCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetCategories", ReplyAction="http://tempuri.org/IMainService/GetCategoriesResponse")]
        System.Threading.Tasks.Task<string[]> GetCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/SearchProgramme", ReplyAction="http://tempuri.org/IMainService/SearchProgrammeResponse")]
        TVProgViewer.UnitTests.TVProgServiceReference.SystemProgramme[] SearchProgramme(int typeProgID, string findTitle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/SearchProgramme", ReplyAction="http://tempuri.org/IMainService/SearchProgrammeResponse")]
        System.Threading.Tasks.Task<TVProgViewer.UnitTests.TVProgServiceReference.SystemProgramme[]> SearchProgrammeAsync(int typeProgID, string findTitle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/SearchUserProgramme", ReplyAction="http://tempuri.org/IMainService/SearchUserProgrammeResponse")]
        TVProgViewer.UnitTests.TVProgServiceReference.SystemProgramme[] SearchUserProgramme(long uid, int typeProgID, string findTitle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/SearchUserProgramme", ReplyAction="http://tempuri.org/IMainService/SearchUserProgrammeResponse")]
        System.Threading.Tasks.Task<TVProgViewer.UnitTests.TVProgServiceReference.SystemProgramme[]> SearchUserProgrammeAsync(long uid, int typeProgID, string findTitle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/UpdateCatalog", ReplyAction="http://tempuri.org/IMainService/UpdateCatalogResponse")]
        void UpdateCatalog(long uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/UpdateCatalog", ReplyAction="http://tempuri.org/IMainService/UpdateCatalogResponse")]
        System.Threading.Tasks.Task UpdateCatalogAsync(long uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/ChangeChannelImage", ReplyAction="http://tempuri.org/IMainService/ChangeChannelImageResponse")]
        void ChangeChannelImage(long uid, int userChannelId, string filename, string contentType, int length, int length25, string pathOrig, string path25);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/ChangeChannelImage", ReplyAction="http://tempuri.org/IMainService/ChangeChannelImageResponse")]
        System.Threading.Tasks.Task ChangeChannelImageAsync(long uid, int userChannelId, string filename, string contentType, int length, int length25, string pathOrig, string path25);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetGenres", ReplyAction="http://tempuri.org/IMainService/GetGenresResponse")]
        TVProgViewer.UnitTests.TVProgServiceReference.Genre[] GetGenres(long uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetGenres", ReplyAction="http://tempuri.org/IMainService/GetGenresResponse")]
        System.Threading.Tasks.Task<TVProgViewer.UnitTests.TVProgServiceReference.Genre[]> GetGenresAsync(long uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/AddGenre", ReplyAction="http://tempuri.org/IMainService/AddGenreResponse")]
        long AddGenre(string name, int iconId, bool visible);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/AddGenre", ReplyAction="http://tempuri.org/IMainService/AddGenreResponse")]
        System.Threading.Tasks.Task<long> AddGenreAsync(string name, int iconId, bool visible);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/UpdateGenre", ReplyAction="http://tempuri.org/IMainService/UpdateGenreResponse")]
        void UpdateGenre(long genreId, string name, bool visible);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/UpdateGenre", ReplyAction="http://tempuri.org/IMainService/UpdateGenreResponse")]
        System.Threading.Tasks.Task UpdateGenreAsync(long genreId, string name, bool visible);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/DeleteGenre", ReplyAction="http://tempuri.org/IMainService/DeleteGenreResponse")]
        void DeleteGenre(long genreId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/DeleteGenre", ReplyAction="http://tempuri.org/IMainService/DeleteGenreResponse")]
        System.Threading.Tasks.Task DeleteGenreAsync(long genreId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/ChangeGenreImage", ReplyAction="http://tempuri.org/IMainService/ChangeGenreImageResponse")]
        void ChangeGenreImage(long uid, long genreId, string filename, string contentType, int length, string pathOrig, string path25);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/ChangeGenreImage", ReplyAction="http://tempuri.org/IMainService/ChangeGenreImageResponse")]
        System.Threading.Tasks.Task ChangeGenreImageAsync(long uid, long genreId, string filename, string contentType, int length, string pathOrig, string path25);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUser", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long uid;
        
        public GetUserRequest() {
        }
        
        public GetUserRequest(long uid) {
            this.uid = uid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetUserResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public TVProgViewer.UnitTests.TVProgServiceReference.User GetUserResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int errCode;
        
        public GetUserResponse() {
        }
        
        public GetUserResponse(TVProgViewer.UnitTests.TVProgServiceReference.User GetUserResult, int errCode) {
            this.GetUserResult = GetUserResult;
            this.errCode = errCode;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMainServiceChannel : TVProgViewer.UnitTests.TVProgServiceReference.IMainService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MainServiceClient : System.ServiceModel.ClientBase<TVProgViewer.UnitTests.TVProgServiceReference.IMainService>, TVProgViewer.UnitTests.TVProgServiceReference.IMainService {
        
        public MainServiceClient() {
        }
        
        public MainServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MainServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddUser(string userName, string passHash, string passExtend, string lastName, string firstName, string middleName, System.DateTime birthDate, System.Nullable<bool> gender, string email, string mobPhone, string otherPhone1, string otherPhone2, string address, string gmtZone) {
            return base.Channel.AddUser(userName, passHash, passExtend, lastName, firstName, middleName, birthDate, gender, email, mobPhone, otherPhone1, otherPhone2, address, gmtZone);
        }
        
        public System.Threading.Tasks.Task<int> AddUserAsync(string userName, string passHash, string passExtend, string lastName, string firstName, string middleName, System.DateTime birthDate, System.Nullable<bool> gender, string email, string mobPhone, string otherPhone1, string otherPhone2, string address, string gmtZone) {
            return base.Channel.AddUserAsync(userName, passHash, passExtend, lastName, firstName, middleName, birthDate, gender, email, mobPhone, otherPhone1, otherPhone2, address, gmtZone);
        }
        
        public TVProgViewer.UnitTests.TVProgServiceReference.SecureData GetHashes(string username) {
            return base.Channel.GetHashes(username);
        }
        
        public System.Threading.Tasks.Task<TVProgViewer.UnitTests.TVProgServiceReference.SecureData> GetHashesAsync(string username) {
            return base.Channel.GetHashesAsync(username);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TVProgViewer.UnitTests.TVProgServiceReference.GetUserResponse TVProgViewer.UnitTests.TVProgServiceReference.IMainService.GetUser(TVProgViewer.UnitTests.TVProgServiceReference.GetUserRequest request) {
            return base.Channel.GetUser(request);
        }
        
        public TVProgViewer.UnitTests.TVProgServiceReference.User GetUser(long uid, out int errCode) {
            TVProgViewer.UnitTests.TVProgServiceReference.GetUserRequest inValue = new TVProgViewer.UnitTests.TVProgServiceReference.GetUserRequest();
            inValue.uid = uid;
            TVProgViewer.UnitTests.TVProgServiceReference.GetUserResponse retVal = ((TVProgViewer.UnitTests.TVProgServiceReference.IMainService)(this)).GetUser(inValue);
            errCode = retVal.errCode;
            return retVal.GetUserResult;
        }
        
        public System.Threading.Tasks.Task<TVProgViewer.UnitTests.TVProgServiceReference.GetUserResponse> GetUserAsync(TVProgViewer.UnitTests.TVProgServiceReference.GetUserRequest request) {
            return base.Channel.GetUserAsync(request);
        }
        
        public TVProgViewer.UnitTests.TVProgServiceReference.ProviderType[] GetProviderTypeList() {
            return base.Channel.GetProviderTypeList();
        }
        
        public System.Threading.Tasks.Task<TVProgViewer.UnitTests.TVProgServiceReference.ProviderType[]> GetProviderTypeListAsync() {
            return base.Channel.GetProviderTypeListAsync();
        }
        
        public TVProgViewer.UnitTests.TVProgServiceReference.SystemChannel[] GetSystemChannelList(int TVProgProviderID) {
            return base.Channel.GetSystemChannelList(TVProgProviderID);
        }
        
        public System.Threading.Tasks.Task<TVProgViewer.UnitTests.TVProgServiceReference.SystemChannel[]> GetSystemChannelListAsync(int TVProgProviderID) {
            return base.Channel.GetSystemChannelListAsync(TVProgProviderID);
        }
        
        public TVProgViewer.UnitTests.TVProgServiceReference.UserChannel[] GetUserChannelList(long uid, int typeProgID) {
            return base.Channel.GetUserChannelList(uid, typeProgID);
        }
        
        public System.Threading.Tasks.Task<TVProgViewer.UnitTests.TVProgServiceReference.UserChannel[]> GetUserChannelListAsync(long uid, int typeProgID) {
            return base.Channel.GetUserChannelListAsync(uid, typeProgID);
        }
        
        public TVProgViewer.UnitTests.TVProgServiceReference.SystemChannel[] GetUserInSystemChannels(long uid, int progProviderID, int typeProgID) {
            return base.Channel.GetUserInSystemChannels(uid, progProviderID, typeProgID);
        }
        
        public System.Threading.Tasks.Task<TVProgViewer.UnitTests.TVProgServiceReference.SystemChannel[]> GetUserInSystemChannelsAsync(long uid, int progProviderID, int typeProgID) {
            return base.Channel.GetUserInSystemChannelsAsync(uid, progProviderID, typeProgID);
        }
        
        public TVProgViewer.UnitTests.TVProgServiceReference.SystemProgramme[] GetSystemProgrammeList(int typeProgID, System.DateTimeOffset dateTimeOffset, int mode, string category) {
            return base.Channel.GetSystemProgrammeList(typeProgID, dateTimeOffset, mode, category);
        }
        
        public System.Threading.Tasks.Task<TVProgViewer.UnitTests.TVProgServiceReference.SystemProgramme[]> GetSystemProgrammeListAsync(int typeProgID, System.DateTimeOffset dateTimeOffset, int mode, string category) {
            return base.Channel.GetSystemProgrammeListAsync(typeProgID, dateTimeOffset, mode, category);
        }
        
        public TVProgViewer.UnitTests.TVProgServiceReference.ProgPeriod GetSystemProgrammePeriod(int typeProgID) {
            return base.Channel.GetSystemProgrammePeriod(typeProgID);
        }
        
        public System.Threading.Tasks.Task<TVProgViewer.UnitTests.TVProgServiceReference.ProgPeriod> GetSystemProgrammePeriodAsync(int typeProgID) {
            return base.Channel.GetSystemProgrammePeriodAsync(typeProgID);
        }
        
        public TVProgViewer.UnitTests.TVProgServiceReference.SystemProgramme[] GetSystemProgrammeDayList(int typeProgID, int cid, System.DateTime tsStart, System.DateTime tsStop) {
            return base.Channel.GetSystemProgrammeDayList(typeProgID, cid, tsStart, tsStop);
        }
        
        public System.Threading.Tasks.Task<TVProgViewer.UnitTests.TVProgServiceReference.SystemProgramme[]> GetSystemProgrammeDayListAsync(int typeProgID, int cid, System.DateTime tsStart, System.DateTime tsStop) {
            return base.Channel.GetSystemProgrammeDayListAsync(typeProgID, cid, tsStart, tsStop);
        }
        
        public void InsertUserChannel(int userChannelID, long uid, int tvProgProviderID, int cid, string displayName, int orderCol) {
            base.Channel.InsertUserChannel(userChannelID, uid, tvProgProviderID, cid, displayName, orderCol);
        }
        
        public System.Threading.Tasks.Task InsertUserChannelAsync(int userChannelID, long uid, int tvProgProviderID, int cid, string displayName, int orderCol) {
            return base.Channel.InsertUserChannelAsync(userChannelID, uid, tvProgProviderID, cid, displayName, orderCol);
        }
        
        public void DeleteUserChannel(long uid, int cid) {
            base.Channel.DeleteUserChannel(uid, cid);
        }
        
        public System.Threading.Tasks.Task DeleteUserChannelAsync(long uid, int cid) {
            return base.Channel.DeleteUserChannelAsync(uid, cid);
        }
        
        public TVProgViewer.UnitTests.TVProgServiceReference.SystemProgramme[] GetUserProgrammeList(long uid, int typeProgID, System.DateTimeOffset dateTimeOffset, int mode, string category) {
            return base.Channel.GetUserProgrammeList(uid, typeProgID, dateTimeOffset, mode, category);
        }
        
        public System.Threading.Tasks.Task<TVProgViewer.UnitTests.TVProgServiceReference.SystemProgramme[]> GetUserProgrammeListAsync(long uid, int typeProgID, System.DateTimeOffset dateTimeOffset, int mode, string category) {
            return base.Channel.GetUserProgrammeListAsync(uid, typeProgID, dateTimeOffset, mode, category);
        }
        
        public TVProgViewer.UnitTests.TVProgServiceReference.SystemProgramme[] GetUserProgrammeDayList(long uid, int typeProgID, int cid, System.DateTime tsStart, System.DateTime tsStop, string category) {
            return base.Channel.GetUserProgrammeDayList(uid, typeProgID, cid, tsStart, tsStop, category);
        }
        
        public System.Threading.Tasks.Task<TVProgViewer.UnitTests.TVProgServiceReference.SystemProgramme[]> GetUserProgrammeDayListAsync(long uid, int typeProgID, int cid, System.DateTime tsStart, System.DateTime tsStop, string category) {
            return base.Channel.GetUserProgrammeDayListAsync(uid, typeProgID, cid, tsStart, tsStop, category);
        }
        
        public string[] GetCategories() {
            return base.Channel.GetCategories();
        }
        
        public System.Threading.Tasks.Task<string[]> GetCategoriesAsync() {
            return base.Channel.GetCategoriesAsync();
        }
        
        public TVProgViewer.UnitTests.TVProgServiceReference.SystemProgramme[] SearchProgramme(int typeProgID, string findTitle) {
            return base.Channel.SearchProgramme(typeProgID, findTitle);
        }
        
        public System.Threading.Tasks.Task<TVProgViewer.UnitTests.TVProgServiceReference.SystemProgramme[]> SearchProgrammeAsync(int typeProgID, string findTitle) {
            return base.Channel.SearchProgrammeAsync(typeProgID, findTitle);
        }
        
        public TVProgViewer.UnitTests.TVProgServiceReference.SystemProgramme[] SearchUserProgramme(long uid, int typeProgID, string findTitle) {
            return base.Channel.SearchUserProgramme(uid, typeProgID, findTitle);
        }
        
        public System.Threading.Tasks.Task<TVProgViewer.UnitTests.TVProgServiceReference.SystemProgramme[]> SearchUserProgrammeAsync(long uid, int typeProgID, string findTitle) {
            return base.Channel.SearchUserProgrammeAsync(uid, typeProgID, findTitle);
        }
        
        public void UpdateCatalog(long uid) {
            base.Channel.UpdateCatalog(uid);
        }
        
        public System.Threading.Tasks.Task UpdateCatalogAsync(long uid) {
            return base.Channel.UpdateCatalogAsync(uid);
        }
        
        public void ChangeChannelImage(long uid, int userChannelId, string filename, string contentType, int length, int length25, string pathOrig, string path25) {
            base.Channel.ChangeChannelImage(uid, userChannelId, filename, contentType, length, length25, pathOrig, path25);
        }
        
        public System.Threading.Tasks.Task ChangeChannelImageAsync(long uid, int userChannelId, string filename, string contentType, int length, int length25, string pathOrig, string path25) {
            return base.Channel.ChangeChannelImageAsync(uid, userChannelId, filename, contentType, length, length25, pathOrig, path25);
        }
        
        public TVProgViewer.UnitTests.TVProgServiceReference.Genre[] GetGenres(long uid) {
            return base.Channel.GetGenres(uid);
        }
        
        public System.Threading.Tasks.Task<TVProgViewer.UnitTests.TVProgServiceReference.Genre[]> GetGenresAsync(long uid) {
            return base.Channel.GetGenresAsync(uid);
        }
        
        public long AddGenre(string name, int iconId, bool visible) {
            return base.Channel.AddGenre(name, iconId, visible);
        }
        
        public System.Threading.Tasks.Task<long> AddGenreAsync(string name, int iconId, bool visible) {
            return base.Channel.AddGenreAsync(name, iconId, visible);
        }
        
        public void UpdateGenre(long genreId, string name, bool visible) {
            base.Channel.UpdateGenre(genreId, name, visible);
        }
        
        public System.Threading.Tasks.Task UpdateGenreAsync(long genreId, string name, bool visible) {
            return base.Channel.UpdateGenreAsync(genreId, name, visible);
        }
        
        public void DeleteGenre(long genreId) {
            base.Channel.DeleteGenre(genreId);
        }
        
        public System.Threading.Tasks.Task DeleteGenreAsync(long genreId) {
            return base.Channel.DeleteGenreAsync(genreId);
        }
        
        public void ChangeGenreImage(long uid, long genreId, string filename, string contentType, int length, string pathOrig, string path25) {
            base.Channel.ChangeGenreImage(uid, genreId, filename, contentType, length, pathOrig, path25);
        }
        
        public System.Threading.Tasks.Task ChangeGenreImageAsync(long uid, long genreId, string filename, string contentType, int length, string pathOrig, string path25) {
            return base.Channel.ChangeGenreImageAsync(uid, genreId, filename, contentType, length, pathOrig, path25);
        }
    }
}
