using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Data.SqlClient;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using TVProgViewer.BusinessLogic.Updater;
using TVProgViewer.Common;

namespace TVProgViewer.DataAccess.Adapters
{
    public class UpdaterAdapter : AdapterBase
    {
        private static Func<DbDataReader, WebResource> getWebResourcesFunc = r =>
        {
            return new WebResource()
            {
                WebResourceID = r.GetIntOrDefault("WebResourceID"),
                SourceType = (r.GetStringOrDefault("TypeName") == "Формат XMLTV") ? 
                            Enums.TypeProg.XMLTV : 
                            Enums.TypeProg.InterTV,
                FileName = r.GetStringOrDefault("FileName"),
                ResourceName = r.GetStringOrDefault("ResourceName"),
                WrUri = new Uri(r.GetStringOrDefault("ResourceUrl"))
            };
        };
        
        public static List<WebResource> GetWebResource()
        {
            return DataAccess.ExecReaderCommand<WebResource>(
                GetTvProgMainConnection(), "spGetWebResources", (DbParameter) null, getWebResourcesFunc);
        }

        public static void ExecWebResource(int wrid, string xmlDoc)
        {
            List<SqlParameter> pars = new List<SqlParameter>
            {
                new SqlParameter("@WRID", SqlDbType.Int) {Value = wrid},
                new SqlParameter("@ChanAndProg", SqlDbType.Xml) {Value = xmlDoc}
            };
            DataAccess.ExecCommand(GetTvProgMainConnection(), "spUpdateXmlChansAndProgs",  pars.Cast<DbParameter>().ToList<DbParameter>());
        }

        public static string UpdateIcon(int cid, string iconWebSrc, string channelIconName, string contentType, string contentCoding,
            byte[] channelOrigIcon, byte[] channel25Icon)
        {
            List<SqlParameter> pars = new List<SqlParameter>
            {
                new SqlParameter("@CID", SqlDbType.Int) {Value = cid},
                new SqlParameter("@IconWebSrc", SqlDbType.NVarChar, iconWebSrc.Length) {Value = iconWebSrc},
                new SqlParameter("@ChannelIconName", SqlDbType.NVarChar, channelIconName.Length) {Value = channelIconName},
                new SqlParameter("@ContentType", SqlDbType.NVarChar, contentType.Length) {Value = contentType},
                new SqlParameter("@ContentCoding", SqlDbType.NVarChar, contentCoding.Length) {Value = contentCoding},
                new SqlParameter("@ChannelOrigIcon", SqlDbType.VarBinary, channelOrigIcon.Length) {Value = channelOrigIcon},
                new SqlParameter("@ChannelIcon25", SqlDbType.VarBinary, channel25Icon.Length) {Value = channel25Icon},
                new SqlParameter("@IsSystem", SqlDbType.Bit) {Value = 1}
            };
            SqlParameter oPar = new SqlParameter("@ErrCode", SqlDbType.NVarChar, 4000);
            oPar.Direction = ParameterDirection.Output;
            pars.Add(oPar);
            DataAccess.ExecCommand(GetTvProgMainConnection(), "spUdtChannelImage", pars.Cast<DbParameter>().ToList<DbParameter>());
            return oPar.Value != null ? oPar.Value.ToString() : null;
        }
        
    }
}
