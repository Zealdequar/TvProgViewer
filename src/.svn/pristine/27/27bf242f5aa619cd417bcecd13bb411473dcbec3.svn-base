//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TVProgViewer.TVProgApp.TvProgServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TvProgServiceReference.IMainService")]
    public interface IMainService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/AddUser", ReplyAction="http://tempuri.org/IMainService/AddUserResponse")]
        int AddUser(string userName, string passHash, string passExtend, string lastName, string firstName, string middleName, System.DateTime birthDate, System.Nullable<bool> gender, string email, string mobPhone, string otherPhone1, string otherPhone2, string address, string gmtZone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/AddUser", ReplyAction="http://tempuri.org/IMainService/AddUserResponse")]
        System.Threading.Tasks.Task<int> AddUserAsync(string userName, string passHash, string passExtend, string lastName, string firstName, string middleName, System.DateTime birthDate, System.Nullable<bool> gender, string email, string mobPhone, string otherPhone1, string otherPhone2, string address, string gmtZone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetHashes", ReplyAction="http://tempuri.org/IMainService/GetHashesResponse")]
        TVProgViewer.BusinessLogic.Users.SecureData GetHashes(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetHashes", ReplyAction="http://tempuri.org/IMainService/GetHashesResponse")]
        System.Threading.Tasks.Task<TVProgViewer.BusinessLogic.Users.SecureData> GetHashesAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetUser", ReplyAction="http://tempuri.org/IMainService/GetUserResponse")]
        TVProgViewer.TVProgApp.TvProgServiceReference.GetUserResponse GetUser(TVProgViewer.TVProgApp.TvProgServiceReference.GetUserRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetUser", ReplyAction="http://tempuri.org/IMainService/GetUserResponse")]
        System.Threading.Tasks.Task<TVProgViewer.TVProgApp.TvProgServiceReference.GetUserResponse> GetUserAsync(TVProgViewer.TVProgApp.TvProgServiceReference.GetUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetProviderTypeList", ReplyAction="http://tempuri.org/IMainService/GetProviderTypeListResponse")]
        TVProgViewer.BusinessLogic.ProgObjs.ProviderType[] GetProviderTypeList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetProviderTypeList", ReplyAction="http://tempuri.org/IMainService/GetProviderTypeListResponse")]
        System.Threading.Tasks.Task<TVProgViewer.BusinessLogic.ProgObjs.ProviderType[]> GetProviderTypeListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetSystemChannelList", ReplyAction="http://tempuri.org/IMainService/GetSystemChannelListResponse")]
        TVProgViewer.BusinessLogic.ProgObjs.SystemChannel[] GetSystemChannelList(int TVProgProviderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetSystemChannelList", ReplyAction="http://tempuri.org/IMainService/GetSystemChannelListResponse")]
        System.Threading.Tasks.Task<TVProgViewer.BusinessLogic.ProgObjs.SystemChannel[]> GetSystemChannelListAsync(int TVProgProviderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetSystemProgrammeList", ReplyAction="http://tempuri.org/IMainService/GetSystemProgrammeListResponse")]
        TVProgViewer.BusinessLogic.ProgObjs.SystemProgramme[] GetSystemProgrammeList(int typeProgID, System.DateTimeOffset dateTimeOffset, int mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetSystemProgrammeList", ReplyAction="http://tempuri.org/IMainService/GetSystemProgrammeListResponse")]
        System.Threading.Tasks.Task<TVProgViewer.BusinessLogic.ProgObjs.SystemProgramme[]> GetSystemProgrammeListAsync(int typeProgID, System.DateTimeOffset dateTimeOffset, int mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetSystemProgrammePeriod", ReplyAction="http://tempuri.org/IMainService/GetSystemProgrammePeriodResponse")]
        TVProgViewer.BusinessLogic.ProgObjs.ProgPeriod GetSystemProgrammePeriod(int typeProgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetSystemProgrammePeriod", ReplyAction="http://tempuri.org/IMainService/GetSystemProgrammePeriodResponse")]
        System.Threading.Tasks.Task<TVProgViewer.BusinessLogic.ProgObjs.ProgPeriod> GetSystemProgrammePeriodAsync(int typeProgID);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUser", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long uid;
        
        public GetUserRequest() {
        }
        
        public GetUserRequest(long uid) {
            this.uid = uid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetUserResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public TVProgViewer.BusinessLogic.Users.User GetUserResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int errCode;
        
        public GetUserResponse() {
        }
        
        public GetUserResponse(TVProgViewer.BusinessLogic.Users.User GetUserResult, int errCode) {
            this.GetUserResult = GetUserResult;
            this.errCode = errCode;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMainServiceChannel : TVProgViewer.TVProgApp.TvProgServiceReference.IMainService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MainServiceClient : System.ServiceModel.ClientBase<TVProgViewer.TVProgApp.TvProgServiceReference.IMainService>, TVProgViewer.TVProgApp.TvProgServiceReference.IMainService {
        
        public MainServiceClient() {
        }
        
        public MainServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MainServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddUser(string userName, string passHash, string passExtend, string lastName, string firstName, string middleName, System.DateTime birthDate, System.Nullable<bool> gender, string email, string mobPhone, string otherPhone1, string otherPhone2, string address, string gmtZone) {
            return base.Channel.AddUser(userName, passHash, passExtend, lastName, firstName, middleName, birthDate, gender, email, mobPhone, otherPhone1, otherPhone2, address, gmtZone);
        }
        
        public System.Threading.Tasks.Task<int> AddUserAsync(string userName, string passHash, string passExtend, string lastName, string firstName, string middleName, System.DateTime birthDate, System.Nullable<bool> gender, string email, string mobPhone, string otherPhone1, string otherPhone2, string address, string gmtZone) {
            return base.Channel.AddUserAsync(userName, passHash, passExtend, lastName, firstName, middleName, birthDate, gender, email, mobPhone, otherPhone1, otherPhone2, address, gmtZone);
        }
        
        public TVProgViewer.BusinessLogic.Users.SecureData GetHashes(string username) {
            return base.Channel.GetHashes(username);
        }
        
        public System.Threading.Tasks.Task<TVProgViewer.BusinessLogic.Users.SecureData> GetHashesAsync(string username) {
            return base.Channel.GetHashesAsync(username);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TVProgViewer.TVProgApp.TvProgServiceReference.GetUserResponse TVProgViewer.TVProgApp.TvProgServiceReference.IMainService.GetUser(TVProgViewer.TVProgApp.TvProgServiceReference.GetUserRequest request) {
            return base.Channel.GetUser(request);
        }
        
        public TVProgViewer.BusinessLogic.Users.User GetUser(long uid, out int errCode) {
            TVProgViewer.TVProgApp.TvProgServiceReference.GetUserRequest inValue = new TVProgViewer.TVProgApp.TvProgServiceReference.GetUserRequest();
            inValue.uid = uid;
            TVProgViewer.TVProgApp.TvProgServiceReference.GetUserResponse retVal = ((TVProgViewer.TVProgApp.TvProgServiceReference.IMainService)(this)).GetUser(inValue);
            errCode = retVal.errCode;
            return retVal.GetUserResult;
        }
        
        public System.Threading.Tasks.Task<TVProgViewer.TVProgApp.TvProgServiceReference.GetUserResponse> GetUserAsync(TVProgViewer.TVProgApp.TvProgServiceReference.GetUserRequest request) {
            return base.Channel.GetUserAsync(request);
        }
        
        public TVProgViewer.BusinessLogic.ProgObjs.ProviderType[] GetProviderTypeList() {
            return base.Channel.GetProviderTypeList();
        }
        
        public System.Threading.Tasks.Task<TVProgViewer.BusinessLogic.ProgObjs.ProviderType[]> GetProviderTypeListAsync() {
            return base.Channel.GetProviderTypeListAsync();
        }
        
        public TVProgViewer.BusinessLogic.ProgObjs.SystemChannel[] GetSystemChannelList(int TVProgProviderID) {
            return base.Channel.GetSystemChannelList(TVProgProviderID);
        }
        
        public System.Threading.Tasks.Task<TVProgViewer.BusinessLogic.ProgObjs.SystemChannel[]> GetSystemChannelListAsync(int TVProgProviderID) {
            return base.Channel.GetSystemChannelListAsync(TVProgProviderID);
        }
        
        public TVProgViewer.BusinessLogic.ProgObjs.SystemProgramme[] GetSystemProgrammeList(int typeProgID, System.DateTimeOffset dateTimeOffset, int mode) {
            return base.Channel.GetSystemProgrammeList(typeProgID, dateTimeOffset, mode);
        }
        
        public System.Threading.Tasks.Task<TVProgViewer.BusinessLogic.ProgObjs.SystemProgramme[]> GetSystemProgrammeListAsync(int typeProgID, System.DateTimeOffset dateTimeOffset, int mode) {
            return base.Channel.GetSystemProgrammeListAsync(typeProgID, dateTimeOffset, mode);
        }
        
        public TVProgViewer.BusinessLogic.ProgObjs.ProgPeriod GetSystemProgrammePeriod(int typeProgID) {
            return base.Channel.GetSystemProgrammePeriod(typeProgID);
        }
        
        public System.Threading.Tasks.Task<TVProgViewer.BusinessLogic.ProgObjs.ProgPeriod> GetSystemProgrammePeriodAsync(int typeProgID) {
            return base.Channel.GetSystemProgrammePeriodAsync(typeProgID);
        }
    }
}
