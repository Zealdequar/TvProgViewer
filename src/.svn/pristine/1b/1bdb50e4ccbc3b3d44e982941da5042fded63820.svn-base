using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using TVProgViewer.BusinessLogic.ProgObjs;
using TVProgViewer.Common;


namespace TVProgViewer.DataAccess.Adapters
{
    public class TvProgAdapter: AdapterBase
    {
        private static Func<DbDataReader, ProviderType> getTvProviderTypeFunc = r =>
            {
                return new ProviderType()
                {
                    TVProgProviderID = r.GetIntOrDefault("TVProgProviderID"),
                    ProviderName = r.GetStringOrDefault("ProviderName"),
                    ProviderUri = new Uri(r.GetStringOrDefault("ProviderWebSite")),
                    TypeProgID = r.GetIntOrDefault("TypeProgID"),
                    TypeEnum = (r.GetStringOrDefault("TypeName") == "Формат XMLTV") ?
                           Enums.TypeProg.XMLTV :
                           Enums.TypeProg.InterTV,
                    TypeName = r.GetStringOrDefault("TypeName"),
                    FileFormat = r.GetStringOrDefault("FileFormat")
                };
            };
        
        public static List<ProviderType> GetTvProviderTypes()
        {
            return DataAccess.ExecReaderCommand<ProviderType>(
                GetTvProgMainConnection(),
                "spGetTVProviderAndTypes",
                (DbParameter)null,
                getTvProviderTypeFunc);
        }

        private static Func<DbDataReader, SystemChannel> getSystemChannelsFunc = r =>
            {
                return new SystemChannel()
                        {
                             ChannelID = r.GetIntOrDefault("ChannelID"),
                             TVProgViewerID = r.GetIntOrDefault("TVProgProviderID"),
                             InternalID = r.GetIntOrDefault("InternalID"),
                             IconID = r.GetLongOrDefault("IconID"),
                             EmblemOrig = r.GetBytesOrDefault("ContentOrig"),
                             Emblem25 = r.GetBytesOrDefault("Content25"),
                             Title = r.GetStringOrDefault("TitleChannel"),
                             ImageWebSrc = r.GetStringOrDefault("IconWebSrc")
                        };
            };

        public static List<SystemChannel> GetSystemChannels(int tvProgProviderID)
        {
            return DataAccess.ExecReaderCommand<SystemChannel>(
                GetTvProgMainConnection(),
                "spGetChannels",
                (DbParameter) new SqlParameter("@TVProgProviderID", SqlDbType.Int) 
                { 
                    Value = tvProgProviderID 
                },
                getSystemChannelsFunc);
        }

        private static Func<DbDataReader, SystemProgramme> getSystemProgrammeFunc = r =>
            {
                return new SystemProgramme()
                {
                    ProgrammesID = r.GetLongOrDefault("ProgrammesID"),
                    CID = r.GetIntOrDefault("CID"),
                    TitleChannel = r.GetStringOrDefault("TitleChannel"),
                    InternalChanID = r.GetIntOrDefault("InternalChanID"),
                    TsStart = r.GetDateTimeOffsetOrDefault("TsStart"),
                    TsStop = r.GetDateTimeOffsetOrDefault("TsStop"),
                    TsStartMO = r.GetDateTimeOrDefault("TsStartMO"),
                    TsStopMO = r.GetDateTimeOrDefault("TsStopMO"),
                    TitleProgramme = r.GetStringOrDefault("Title"),
                    TelecastDescr = r.GetStringOrDefault("Descr"),
                    AnonsContent = r.GetBytesOrDefault("AnonsContent"),
                    Category = r.GetStringOrDefault("Category"),
                    Remain = r.GetIntOrDefault("Remain"),
                    OrderCol = r.GetIntOrDefault("OrderCol")
                };
            };

        private static Func<DbDataReader, SystemProgramme> getSystemProgrammeDayFunc = r =>
            {
                return new SystemProgramme()
                {
                    ProgrammesID = r.GetLongOrDefault("ProgrammesID"),
                    CID = r.GetIntOrDefault("CID"),
                    TitleChannel = r.GetStringOrDefault("TitleChannel"),
                    InternalChanID = r.GetIntOrDefault("InternalChanID"),
                    TsStart = r.GetDateTimeOffsetOrDefault("TsStart"),
                    TsStop = r.GetDateTimeOffsetOrDefault("TsStop"),
                    TsStartMO = r.GetDateTimeOrDefault("TsStartMO"),
                    TsStopMO = r.GetDateTimeOrDefault("TsStopMO"),
                    TitleProgramme = r.GetStringOrDefault("Title"),
                    TelecastDescr = r.GetStringOrDefault("Descr"),
                    AnonsContent = r.GetBytesOrDefault("AnonsContent"),
                    Category = r.GetStringOrDefault("Category"),
                    OrderCol = r.GetIntOrDefault("OrderCol")
                };
            };

        /// <summary>
        /// Выборка телепрограммы
        /// </summary>
        /// <param name="typeProgID"></param>
        /// <param name="dateTimeOffset"></param>
        /// <param name="mode">режимы выбоки: 1 - сейчас; 2 - следом</param>
        /// <returns></returns>
        public static List<SystemProgramme> GetSystemProgrammes(int typeProgID, DateTimeOffset dateTimeOffset, int mode)
        {
            List<SqlParameter> pars = new List<SqlParameter>{
                new SqlParameter("@TID", SqlDbType.Int){ Value = typeProgID },
                new SqlParameter("@TsDate", SqlDbType.DateTime) {Value = dateTimeOffset.DateTime },
                new SqlParameter("@Mode", SqlDbType.Int) {Value = mode }
                };
            return DataAccess.ExecReaderCommand<SystemProgramme>(
                GetTvProgMainConnection(),
                "spGetProgrammesLite",
                pars.Cast<DbParameter>().ToList(),
                getSystemProgrammeFunc);
        }

        public static List<SystemProgramme> GetProgrammeOfDay(int typeProgID, int cid, DateTime tsStart, DateTime tsStop)
        {
            List<SqlParameter> pars = new List<SqlParameter>{
                new SqlParameter("@TID", SqlDbType.Int){Value = typeProgID},
                new SqlParameter("@CID", SqlDbType.Int){Value = cid},
                new SqlParameter("@TsStart", SqlDbType.DateTime){Value = tsStart},
                new SqlParameter("@TsStop", SqlDbType.DateTime){Value = tsStop}
            };

            return DataAccess.ExecReaderCommand<SystemProgramme>(
                GetTvProgMainConnection(),
                "spGetProgrammeOfDayLite",
                pars.Cast<DbParameter>().ToList(),
                getSystemProgrammeDayFunc);
        }

        private static Func<DbDataReader, ProgPeriod> getSystemProgrammePeriodFunc = r =>
            {
                return new ProgPeriod()
                {
                     dtStart = r.GetDateTimeOffsetOrDefault("minPeriodProg"),
                     dtEnd = r.GetDateTimeOffsetOrDefault("maxPeriodProg")
                }                                                         ;
            }                                                             ;
        /// <summary>
        /// Получение периода действия телепрограммы
        /// </summary>
        /// <param name="typeProgID"></param>
        /// <returns></returns>
        public static ProgPeriod GetSystemProgrammePeriod(int typeProgID)
        {
            SqlParameter par = new SqlParameter("@TID", SqlDbType.Int) { Value = typeProgID };
            return DataAccess.ExecReaderCommandReturnOne<ProgPeriod>(
                GetTvProgMainConnection(),
                "spGetSystemProgrammePeriod",
                (DbParameter)par,
                getSystemProgrammePeriodFunc);
        }

        public static void InsertUserChannel(int userChannelID, long uid, 
                            int typeProgID, int cid, string displayName, int orderCol)
        {
            List<SqlParameter> pars = new List<SqlParameter>{
                new SqlParameter("@UserChannelID", SqlDbType.Int) {Value = userChannelID},
                new SqlParameter("@UID", SqlDbType.BigInt) {Value = uid},
                new SqlParameter("@TVProgProviderID", SqlDbType.Int) {Value = typeProgID},
                new SqlParameter("@CID", SqlDbType.Int) {Value = cid},
                new SqlParameter("@DisplayName", SqlDbType.NVarChar, 300) {Value = displayName},
                new SqlParameter("@OrderCol", SqlDbType.Int) {Value = orderCol}
            };
            DataAccess.ExecCommand(GetTvProgMainConnection(),
                "spInsUserChannel",
                pars.Cast<DbParameter>().ToList<DbParameter>());
        }

        public static void DeleteUserChannel(long uid, int cid)
        {
            List<SqlParameter> pars = new List<SqlParameter>{
                new SqlParameter("@UID", SqlDbType.BigInt) {Value = uid},
                new SqlParameter("@CID", SqlDbType.Int) {Value = cid}
            };
            DataAccess.ExecCommand(GetTvProgMainConnection(),
                "spDelUserChannel",
                pars.Cast<DbParameter>().ToList<DbParameter>());
            
        }

        public static void UpdateUserChannel(long uid, int cid, string displayName, int orderCol)
        {
            List<SqlParameter> pars = new List<SqlParameter>{
                new SqlParameter("@UID", SqlDbType.BigInt) {Value = uid},
                new SqlParameter("@CID", SqlDbType.Int) {Value = cid},
                new SqlParameter("@DisplayName", SqlDbType.NVarChar, 3000) {Value = displayName},
                new SqlParameter("@OrderCol", SqlDbType.Int) {Value= orderCol}
            };
            DataAccess.ExecCommand(GetTvProgMainConnection(),
                "spUpdateUserChannel",
                pars.Cast<DbParameter>().ToList<DbParameter>());
        }

        private static Func<DbDataReader, UserChannel> getUserChannelsFunc = r =>
        {
            return new UserChannel()
            {
                UserChannelID = r.GetIntOrDefault("UserChannelID"),
                ChannelID = r.GetIntOrDefault("CID"),
                TVProgViewerID = r.GetIntOrDefault("TVProgProviderID"),
                InternalID = r.GetIntOrDefault("InternalID"),
                IconID = r.GetLongOrDefault("IconID"),
                EmblemOrig = r.GetBytesOrDefault("ContentOrig"),
                Emblem25 = r.GetBytesOrDefault("Content25"),
                Title = r.GetStringOrDefault("TitleChannel"),
                SystemTitle = r.GetStringOrDefault("TitleChannel"),
                UserTitle = r.GetStringOrDefault("DisplayName"), 
                ImageWebSrc = r.GetStringOrDefault("IconWebSrc"),
                OrderCol = r.GetIntOrDefault("OrderCol")
            };
        };


        public static List<UserChannel> GetUserChannels(long uid, int typeProgID)
        {
            List<SqlParameter> pars = new List<SqlParameter>() {
                new SqlParameter("@UID", SqlDbType.Int) { Value = uid},
                new SqlParameter("@TVProgProviderID", SqlDbType.Int) {Value = typeProgID} 
            };
            return DataAccess.ExecReaderCommand<UserChannel>(
                GetTvProgMainConnection(),
                "spGetUserChannels",
                pars.Cast<DbParameter>().ToList<DbParameter>(),
                getUserChannelsFunc);
        }

        public static List<SystemProgramme> GetUserProgrammes(long uid, int typeProgID, DateTimeOffset dateTimeOffset, int mode)
        {
            List<SqlParameter> pars = new List<SqlParameter>{
                new SqlParameter("@UID", SqlDbType.BigInt) {Value = uid}, 
                new SqlParameter("@TID", SqlDbType.Int){ Value = typeProgID },
                new SqlParameter("@TsDate", SqlDbType.DateTime) {Value = dateTimeOffset.DateTime },
                new SqlParameter("@Mode", SqlDbType.Int) {Value = mode }
                };
            return DataAccess.ExecReaderCommand<SystemProgramme>(
                GetTvProgMainConnection(),
                "spGetUserProgrammesLite",
                pars.Cast<DbParameter>().ToList(),
                getSystemProgrammeFunc);
        }

        public static List<SystemProgramme> GetUserProgrammeOfDay(long uid, int typeProgID, int cid, DateTime tsStart, DateTime tsStop)
        {
            List<SqlParameter> pars = new List<SqlParameter>{
                new SqlParameter("@UID", SqlDbType.BigInt){Value = typeProgID},
                new SqlParameter("@TID", SqlDbType.Int){Value = typeProgID},
                new SqlParameter("@CID", SqlDbType.Int){Value = cid},
                new SqlParameter("@TsStart", SqlDbType.DateTime){Value = tsStart},
                new SqlParameter("@TsStop", SqlDbType.DateTime){Value = tsStop}
            };

            return DataAccess.ExecReaderCommand<SystemProgramme>(
                GetTvProgMainConnection(),
                "spGetUserProgrammeOfDayLite",
                pars.Cast<DbParameter>().ToList(),
                getSystemProgrammeDayFunc);
        }

    }
}
